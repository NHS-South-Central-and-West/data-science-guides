---
title: "Linear Regression in Python"
subtitle: "Modelling the Relationship Between Deprivation & Life Expectancy Using Fingertips & ONS Health Index Data"
author: "Paul Johnson"
date: today
---

```{python}
#| label: setup
#| code-fold: true
#| code-summary: 'Setup Code (Click to Expand)'

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import statsmodels.api as sm

# data path
path = '../../../data/'
file_name = 'deprivation.csv'

# import data
df = pd.read_csv(f"{path}{file_name}")

```

Linear regression is a cornerstone of data science and statistical analysis, and is almost certainly the most common statistical method in use today (t-tests might run it close in industry). Its popularity is owed to its incredible flexibility and simplicity, as it can be used to model a wide range of relationships in a variety of contexts, and it is both extremely simple to use and to interpret. If there is one statistical method that every data scientist and analyst should be familiar with, it is linear regression (followed closely by logistic regression, and then t-tests).

Not only is linear regression a phenomenally useful tool in a data scientist's arsenal, but it is also a fantastic way to learn about the fundamentals of statistical analysis. Linear regression serves as the perfect introduction to statistical inference, and it is a great starting point for learning about regression analysis because all regression models are based on linear regression. Once you have a good understanding of linear regression, you can then move on to more advanced regression models, such as logistic regression, Poisson regression, and so on.

This tutorial will introduce you to linear regression in Python, using data pulled from two different sources. The first data source is the Public Health England's [Fingertips API](https://fingertips.phe.org.uk/) (for which there are packages available in [R](https://github.com/ropensci/fingertipsR) and [Python](https://github.com/publichealthengland/PHDS_fingertips_py)), which is a repository of public health data on a wide range of topics. The data included in this tutorial relates to health outcomes (life expectancy at birth) and deprivation (Indices of Multiple Deprivation (IMD) score and decile). The second data source is the Office of National Statistics' [Health Index](https://www.ons.gov.uk/releases/healthindexforengland2015to2020), which is a composite measure of the health of the population in England. The Health Index is derived froma a wide range of indicators related to three health domains: Healthy People (health outcomes), Healthy Lives (health-related behaviours and personal circumstances), and Healthy Places (wider drivers of health that relate to the places people live). The data included in this tutorial comes from two composite subdomains in the Healthy Lives domain, which measure the physiological and behavioural risk factors that are associated with poor health outcomes. Both data sources are aggregated at the upper-tier local authority level, and the data covers the years 2015 to 2018.

## Exploratory Data Analysis

```{python}
#| label: df-info

# data summary
df.info()

```

```{python}
#| label: df-head

# view first five rows
df.head()

```

```{python}
#| label: summary-stats

df.describe()

```

```{python}
#| label: deprivation-plot
#| fig-align: center

# imd
sns.scatterplot(x='life_expectancy', y='imd_score', data=df)
sns.despine()
plt.show()

```

```{python}
#| label: phsyiological-plot
#| fig-align: center

# physiological risk factors
sns.scatterplot(x='life_expectancy', y='physiological_score', data=df)
sns.despine()
plt.show()

```

```{python}
#| label: behavioural-plot
#| fig-align: center

# behavioural risk factors
sns.scatterplot(x='life_expectancy', y='behavioural_score', data=df)
sns.despine()
plt.show()

```

```{python}
#| label: life-expectancy-correlations

# correlations with life expectancy
df.corr(numeric_only=True).loc[:,'life_expectancy']

```

```{python}
#| label: correlation-matrix

# correlation matrix
corr = df[[
    'life_expectancy', 'imd_score',
    'physiological_score', 'behavioural_score']].corr()
corr

```

```{python}
#| label: correlation-plot
#| fig-align: center

# plot correlation matrix
sns.heatmap(corr,
    cmap=sns.diverging_palette(220, 10, as_cmap=True),
    vmin=-1.0, vmax=1.0,
    square=True, annot=True)
plt.show()

```

There are strong correlations between life expectancy and the three independent variables, however, the correlation between IMD score and the two risk factor variables is also relatively strong, and in the case of behavioural risk factors, it is very strong. This could be an issue.

## Linear Regression

```{python}
#| label: model

# create model
model = sm.OLS.from_formula(
    'life_expectancy ~ imd_score + physiological_score + behavioural_score',
    data=df)

# fit model
results = model.fit()

# print summary
print(results.summary())

```

The results suggest that each of the explanatory variables has a small but significant effect on life expectancy. As deprivation increases (IMD score increases), life expectancy decreases, while as the index score representing physiological and behavioural risk factors (meaning a better performance in that Health Index subdomain) increases, life expectancy increases.